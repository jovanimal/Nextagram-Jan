{"version":3,"sources":["components/Loader.js","components/UserImages.js","pages/HomePage.js","pages/UserProfile.js","pages/UploadPage.js","components/LoginForm.js","components/SignUpForm.js","components/AuthModal.js","components/NavBar.js","pages/MyProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["Loader","primaryColor","secondaryColor","size","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","r","fill","attributeName","repeatCount","dur","values","keyTimes","begin","transform","d","type","UserImages","userId","useState","images","setImages","isFetching","setIsFetching","useEffect","axios","get","then","result","data","map","image","key","id","src","url","alt","HomePage","users","isLoading","Container","Row","user","Col","md","Card","className","CardBody","CardTitle","tag","Link","to","username","profileImage","columnCount","columnGap","UserProfile","useParams","fluid","length","idx","UploadPage","previewImage","setPreviewImage","uploadImage","setUploadImage","responseMessage","setResponseMessage","position","left","top","Button","outline","color","Form","onSubmit","e","preventDefault","formData","FormData","append","jwt","localStorage","getItem","post","headers","Authorization","success","catch","error","console","log","response","FormGroup","CustomInput","name","onChange","imageFile","target","files","newImage","URL","createObjectURL","LoginForm","loginUser","toggle","setUsername","password","setPassword","successLogin","Label","Input","placeholder","value","toastSettings","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","SignUpForm","signUpUser","delay","setDelay","usernameValid","setUsernameValid","email","setEmail","confirmPassword","setConfirmPassword","successCallback","handleUsernameInput","clearTimeout","newUsername","newDelay","setTimeout","valid","checkUsername","toast","invalid","FormFeedback","FormText","AuthModal","buttonLabel","modal","setModal","showLogin","setShowLogin","NavLink","cursor","onClick","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","NavBar","currentUser","logoutUser","setIsOpen","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavbarText","MyProfilePage","setCurrentUser","history","useHistory","loggedInUser","JSON","parse","push","method","profile_picture","borderRadius","index","App","setUsers","setIsLoading","callback","status","warning","err","message","forEach","setItem","auth_token","stringify","removeItem","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe8f6986.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loader = ({ primaryColor, secondaryColor, size }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      style={{\n        margin: \"auto\",\n        background: \"transparent\",\n        display: \"block\",\n        shapeRendering: \"auto\"\n      }}\n      width={size}\n      height={size}\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <g>\n        <circle cx=\"75.9234\" cy=\"50\" r=\"4\" fill={secondaryColor}>\n          <animate\n            attributeName=\"cx\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"95;35\"\n            keyTimes=\"0;1\"\n            begin=\"-0.67s\"\n          ></animate>\n          <animate\n            attributeName=\"fill-opacity\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"0;1;1\"\n            keyTimes=\"0;0.2;1\"\n            begin=\"-0.67s\"\n          ></animate>\n        </circle>\n        <circle cx=\"36.3234\" cy=\"50\" r=\"4\" fill={secondaryColor}>\n          <animate\n            attributeName=\"cx\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"95;35\"\n            keyTimes=\"0;1\"\n            begin=\"-0.33s\"\n          ></animate>\n          <animate\n            attributeName=\"fill-opacity\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"0;1;1\"\n            keyTimes=\"0;0.2;1\"\n            begin=\"-0.33s\"\n          ></animate>\n        </circle>\n        <circle cx=\"56.1234\" cy=\"50\" r=\"4\" fill={secondaryColor}>\n          <animate\n            attributeName=\"cx\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"95;35\"\n            keyTimes=\"0;1\"\n            begin=\"0s\"\n          ></animate>\n          <animate\n            attributeName=\"fill-opacity\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"0;1;1\"\n            keyTimes=\"0;0.2;1\"\n            begin=\"0s\"\n          ></animate>\n        </circle>\n      </g>\n      <g transform=\"translate(-15 0)\">\n        <path\n          d=\"M50 50L20 50A30 30 0 0 0 80 50Z\"\n          fill={primaryColor}\n          transform=\"rotate(90 50 50)\"\n        ></path>\n        <path\n          d=\"M50 50L20 50A30 30 0 0 0 80 50Z\"\n          fill={primaryColor}\n          transform=\"rotate(31.6851 50 50)\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"0 50 50;45 50 50;0 50 50\"\n            keyTimes=\"0;0.5;1\"\n          ></animateTransform>\n        </path>\n        <path\n          d=\"M50 50L20 50A30 30 0 0 1 80 50Z\"\n          fill={primaryColor}\n          transform=\"rotate(-31.6851 50 50)\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            repeatCount=\"indefinite\"\n            dur=\"1s\"\n            values=\"0 50 50;-45 50 50;0 50 50\"\n            keyTimes=\"0;0.5;1\"\n          ></animateTransform>\n        </path>\n      </g>\n    </svg>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Image from \"react-graceful-image\";\nimport Loader from \"./Loader\";\n\nconst UserImages = ({ userId }) => {\n  const [images, setImages] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(`https://insta.nextacademy.com/api/v2/images?userId=${userId}`)\n      .then(result => {\n        setImages(result.data);\n        setIsFetching(false);\n      });\n  }, [userId]);\n\n  if (isFetching) {\n    return (\n      <Loader primaryColor=\"#fcba03\" secondaryColor=\"#752bed\" size=\"150px\" />\n    );\n  }\n\n  return (\n    <>\n      {images.map(image => {\n        return (\n          <Image\n            key={image.id}\n            style={{\n              display: \"inline-block\",\n              margin: \"0 0 1em\",\n              width: \"100%\"\n            }}\n            src={image.url}\n            alt=\"anything\"\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default UserImages;\n","import React from \"react\";\nimport { Col, Card, CardBody, CardTitle, Container, Row } from \"reactstrap\";\nimport UserImages from \"../components/UserImages\";\nimport Image from \"react-graceful-image\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\n\nconst HomePage = ({ users, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Loader size=\"250px\" primaryColor=\"#ecf542\" secondaryColor=\"#f5428a\" />\n    );\n  }\n  return (\n    <Container>\n      <Row>\n        {users.map(user => {\n          return (\n            <Col key={user.id} md={12}>\n              <Card className=\"my-3\">\n                <CardBody>\n                  <Row>\n                    <Col md={4}>\n                      <CardTitle\n                        tag={Link}\n                        to={`/user/${user.id}/${user.username}`}\n                        className=\"text-dark text-left\"\n                      >\n                        {user.username}\n                      </CardTitle>\n                      <Image\n                        className=\"w-75 mx-auto d-block rounded\"\n                        src={user.profileImage}\n                        alt={user.username}\n                      />\n                    </Col>\n                    <Col md={8}>\n                      <div style={{ columnCount: 3, columnGap: \"1em\" }}>\n                        <UserImages userId={user.id} />\n                      </div>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport Image from \"react-graceful-image\";\nimport Loader from \"../components/Loader\";\n\nconst UserProfile = ({ users }) => {\n  const { id, username } = useParams();\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://insta.nextacademy.com/api/v1/images?userId=${id}`)\n      .then(result => {\n        setImages(result.data);\n      });\n  }, [id]);\n\n  return (\n    <>\n      <Container fluid>\n        <h1>{username}'s Profile</h1>\n        <Card className=\"w-100 bg-transparent p-4 border-0\">\n          {images.length === 0 ? (\n            <Loader primaryColor=\"white\" secondaryColor=\"blue\" size=\"200px\" />\n          ) : (\n            <div style={{ columnCount: 3, columnGap: \"1em\" }}>\n              {images.map((image, idx) => {\n                return (\n                  <Image\n                    key={idx}\n                    src={image}\n                    style={{\n                      display: \"inline-block\",\n                      margin: \"0 0 1em\",\n                      width: \"100%\"\n                    }}\n                  />\n                );\n              })}\n            </div>\n          )}\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default UserProfile;\n","import React, { useState } from \"react\";\nimport { Container, FormGroup, CustomInput, Form, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport { NavLink as Link } from \"react-router-dom\";\n\nconst UploadPage = () => {\n  const [previewImage, setPreviewImage] = useState(null);\n  const [uploadImage, setUploadImage] = useState(null);\n  const [responseMessage, setResponseMessage] = useState(null);\n\n  const handleUpload = e => {\n    e.preventDefault();\n\n    // axios call to upload to the server\n    let formData = new FormData();\n\n    formData.append(\"image\", uploadImage);\n\n    let jwt = localStorage.getItem(\"authToken\");\n\n    axios\n      .post(\"https://insta.nextacademy.com/api/v1/images/\", formData, {\n        headers: {\n          Authorization: `Bearer ${jwt}`\n        }\n      })\n      .then(result => {\n        if (result.data.success) {\n          setResponseMessage(\"Image uploaded successfully!\");\n        } else {\n          setResponseMessage(\"Error uploading Image.\");\n        }\n      })\n      .catch(error => {\n        console.log(error.response);\n        setResponseMessage(\"Major error, contact admin!\");\n      });\n  };\n\n  const handleImage = e => {\n    // Handle the preview and file to upload\n    let imageFile = e.target.files[0];\n\n    let newImage = URL.createObjectURL(imageFile);\n\n    setPreviewImage(newImage);\n    setUploadImage(imageFile);\n  };\n\n  return (\n    <Container className=\"pt-5\">\n      <h6>Upload New Image</h6>\n      <div\n        className=\"border border-light rounded mx-auto d-block mt-4\"\n        style={{ height: \"500px\", width: \"500px\", position: \"relative\" }}\n      >\n        {previewImage ? (\n          responseMessage ? (\n            <>\n              <h2\n                style={{\n                  position: \"absolute\",\n                  left: \"50%\",\n                  top: \"50%\",\n                  transform: \"translate(-50%, -50%)\"\n                }}\n              >\n                {responseMessage}\n              </h2>\n              <Button\n                outline\n                color=\"success\"\n                tag={Link}\n                to=\"/profile\"\n                style={{\n                  position: \"absolute\",\n                  left: \"50%\",\n                  top: \"65%\",\n                  transform: \"translate(-50%, -50%)\"\n                }}\n              >\n                My profile\n              </Button>\n            </>\n          ) : (\n            <img\n              className=\"w-75\"\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                height: \"400px\",\n                width: \"auto\",\n                transform: \"translate(-50%, -50%)\"\n              }}\n              src={previewImage}\n              alt=\"preview\"\n            />\n          )\n        ) : (\n          <h2\n            style={{\n              position: \"absolute\",\n              left: \"50%\",\n              top: \"50%\",\n              transform: \"translate(-50%, -50%)\"\n            }}\n          >\n            Choose image to preview\n          </h2>\n        )}\n      </div>\n      <Form onSubmit={handleUpload}>\n        <FormGroup className=\"w-50 mx-auto d-block\">\n          <CustomInput\n            type=\"file\"\n            id=\"exampleCustomFileBrowser\"\n            name=\"customFile\"\n            className=\"mt-4\"\n            onChange={handleImage}\n          />\n        </FormGroup>\n        <Button outline color=\"primary\">\n          Upload\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\n// URL.createObjectURL(e.target.files[0])\n// https://insta.nextacademy.com/api/v1/images/\n\nexport default UploadPage;\n","import React, { useState } from \"react\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\n\nconst LoginForm = ({loginUser, toggle}) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const successLogin = () => {\n    toggle()\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    loginUser(username, password, successLogin)\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label>Username</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter Username...\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>Password</Label>\n          <Input\n            type=\"password\"\n            placeholder=\"Enter password...\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n        </FormGroup>\n        <Button className=\"mx-auto d-block\" outline color=\"primary\">\n          Login\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  FormFeedback,\n  FormGroup,\n  FormText\n} from \"reactstrap\";\nimport { toast } from \"react-toastify\";\n\nconst SignUpForm = ({ signUpUser, toggle }) => {\n  const [delay, setDelay] = useState(null);\n  const [usernameValid, setUsernameValid] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const successCallback = () => {\n    setEmail(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    toggle();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!email || !username || !password || !confirmPassword) {\n      return toast.error(\"All fields must be filled!\", toastSettings);\n    }\n\n    if (password.length < 8) {\n      return toast.error(\"Password is too short!\", toastSettings);\n    }\n\n    if (password !== confirmPassword) {\n      return toast.error(\"Passwords are not matching!\", toastSettings);\n    }\n\n    if (username.length <= 6) {\n      return toast.error(\"Username is too short!\", toastSettings);\n    }\n\n    if (!usernameValid) {\n      return toast.error(\"Username is invalid, please check!\", toastSettings);\n    }\n\n    signUpUser(username, email, password, successCallback);\n  };\n\n  const checkUsername = newUsername => {\n    axios\n      .get(\n        `https://insta.nextacademy.com/api/v1/users/check_name?username=${newUsername}`\n      )\n      .then(response => {\n        if (response.data.valid) {\n          setUsernameValid(true);\n        } else {\n          setUsernameValid(false);\n        }\n      });\n  };\n\n  const handleUsernameInput = e => {\n    clearTimeout(delay);\n    const newUsername = e.target.value;\n    setUsername(newUsername);\n\n    const newDelay = setTimeout(() => {\n      checkUsername(newUsername);\n    }, 500);\n\n    setDelay(newDelay);\n  };\n\n  const getInputProp = () => {\n    if (!username.length) {\n      return null;\n    }\n\n    if (username.length <= 6) {\n      return { invalid: true };\n    }\n\n    if (usernameValid) {\n      return { valid: true };\n    } else {\n      return { invalid: true };\n    }\n  };\n\n  const getFormFeedback = () => {\n    if (!username.length) {\n      return null;\n    }\n\n    if (username.length <= 6) {\n      return <FormFeedback invalid>Must be at least 6 characters</FormFeedback>;\n    }\n\n    if (usernameValid) {\n      return <FormFeedback valid>Sweet! That name is available</FormFeedback>;\n    } else {\n      return <FormFeedback invalid>Sorry! Username is taken</FormFeedback>;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        <Label>Email Address</Label>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter your email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label>Username</Label>\n        <Input\n          type=\"text\"\n          placeholder=\"Choose a username\"\n          value={username}\n          onChange={e => handleUsernameInput(e)}\n          {...getInputProp()}\n        />\n        {getFormFeedback()}\n        <FormText>Enter a username between 6 and 20 characters</FormText>\n      </FormGroup>\n      <FormGroup>\n        <Label>Password</Label>\n        <Input\n          type=\"password\"\n          placeholder=\"Choose a password, min 6 characters\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label>Confirm Password</Label>\n        <Input\n          type=\"password\"\n          placeholder=\"Confirm your password\"\n          value={confirmPassword}\n          onChange={e => setConfirmPassword(e.target.value)}\n        />\n      </FormGroup>\n      <Button className=\"mx-auto d-block\" outline color=\"primary\">\n        Sign Up\n      </Button>\n    </Form>\n  );\n};\n\nconst toastSettings = {\n  position: \"top-right\",\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true\n};\n\nexport default SignUpForm;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  NavLink\n} from \"reactstrap\";\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\n\nconst AuthModal = ({ buttonLabel, signUpUser, loginUser }) => {\n  const [modal, setModal] = useState(false);\n  const [showLogin, setShowLogin] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    setShowLogin(true);\n  };\n\n  const toggleLogin = () => setShowLogin(!showLogin);\n\n  return (\n    <div>\n      <NavLink style={{ cursor: \"pointer\" }} onClick={toggle}>\n        {buttonLabel}\n      </NavLink>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>\n          {showLogin ? \"Login\" : \"Sign Up\"}\n        </ModalHeader>\n        <ModalBody>\n          {showLogin ? (\n            <LoginForm loginUser={loginUser} toggle={toggle}/>\n          ) : (\n            <SignUpForm signUpUser={signUpUser} toggle={toggle} />\n          )}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"link\" onClick={toggleLogin}>\n            {showLogin\n              ? \"Not registered? Sign Up Now\"\n              : \"Already a user? Sign In\"}\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AuthModal;\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from \"reactstrap\";\nimport { NavLink as Link } from \"react-router-dom\";\nimport AuthModal from \"./AuthModal\";\n\nconst NavBar = ({ signUpUser, loginUser, currentUser, logoutUser }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand>Nextagram</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {currentUser ? (\n              <NavItem className=\"mr-5\">\n                <NavbarText>Hello, {currentUser.username}</NavbarText>\n              </NavItem>\n            ) : (\n              \"\"\n            )}\n            <NavItem>\n              <NavLink tag={Link} to=\"/\">\n                Home\n              </NavLink>\n            </NavItem>\n            {currentUser ? (\n              <>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/profile\">\n                    My Profile\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} to=\"/image/upload\">\n                    Upload\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink onClick={logoutUser} style={{ cursor: \"pointer\" }}>\n                    Logout\n                  </NavLink>\n                </NavItem>\n              </>\n            ) : (\n              <NavItem>\n                <AuthModal\n                  buttonLabel=\"Login\"\n                  signUpUser={signUpUser}\n                  loginUser={loginUser}\n                />\n              </NavItem>\n            )}\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, NavLink as Link } from \"react-router-dom\";\nimport { Container, Col, Row, Button } from \"reactstrap\";\nimport Image from \"react-graceful-image\";\nimport Loader from \"../components/Loader\";\nimport axios from \"axios\";\n\nconst MyProfilePage = () => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [images, setImages] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"userInfo\");\n    if (loggedInUser) {\n      setCurrentUser(JSON.parse(loggedInUser));\n    } else {\n      history.push(\"/\");\n    }\n\n    axios({\n      method: \"GET\",\n      url: \"https://insta.nextacademy.com/api/v1/images/me\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n      }\n    }).then(response => {\n      setImages(response.data);\n    });\n  }, []);\n\n  if (!currentUser) {\n    return <Loader primaryColor=\"yellow\" secondaryColor=\"red\" size=\"200px\" />;\n  }\n\n  console.log(currentUser);\n\n  return (\n    <div>\n      <Container className=\"mt-5\" fluid>\n        <Row>\n          <Col md={6}>\n            <Image\n              src={currentUser.profile_picture}\n              style={{ width: \"auto\", borderRadius: \"50%\", height: \"200px\" }}\n              alt=\"me\"\n            />\n          </Col>\n          <Col md={6}>\n            <h1>{currentUser.username}</h1>\n            <Button\n              className=\"mt-4\"\n              color=\"secondary\"\n              tag={Link}\n              to=\"/image/upload\"\n            >\n              Upload New Image\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <hr />\n        {images.length > 0 ? (\n          <div\n            // className=\"w-100 mt-5\"\n            style={{ columnCount: 4, columnGap: \"1em\" }}\n          >\n            {images.map((image, index) => {\n              return (\n                <Image\n                  key={index}\n                  src={image}\n                  style={{ width: \"100%\", margin: \"0 0 1em\", display: \"block\" }}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          <h1 className=\"mt-5\">No Images to display! Make a post!</h1>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default MyProfilePage;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport UserProfile from \"./pages/UserProfile\";\nimport UploadPage from \"./pages/UploadPage\";\nimport NavBar from \"./components/NavBar\";\nimport { Route } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport MyProfilePage from \"./pages/MyProfilePage\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    axios.get(\"https://insta.nextacademy.com/api/v1/users/\").then(result => {\n      setUsers(result.data);\n      setIsLoading(false);\n    });\n\n    let loggedInUser = localStorage.getItem(\"userInfo\");\n    if (loggedInUser) {\n      setCurrentUser(JSON.parse(loggedInUser));\n    }\n  }, []);\n\n  const signUpUser = (username, email, password, callback) => {\n    axios({\n      method: \"POST\",\n      url: \"https://insta.nextacademy.com/api/v1/users/\",\n      data: {\n        username: username,\n        email: email,\n        password: password\n      }\n    })\n      .then(result => {\n        if (result.data.status === \"success\") {\n          toast.success(\"Registered account!\", toastSettings);\n          callback();\n        } else {\n          toast.warning(\"Oops, something went wrong!\", toastSettings);\n        }\n      })\n      .catch(err => {\n        let delay = 500;\n        err.response.data.message.forEach(message => {\n          setTimeout(() => {\n            toast.error(message, toastSettings);\n          }, delay);\n          delay += 500;\n        });\n      });\n  };\n\n  const loginUser = (username, password, callback) => {\n    axios({\n      method: \"POST\",\n      url: \"https://insta.nextacademy.com/api/v1/login\",\n      data: {\n        username: username,\n        password: password\n      }\n    })\n      .then(response => {\n        if (response.status === 201) {\n          toast.success(\n            `Welcome back ${response.data.user.username}`,\n            toastSettings\n          );\n          localStorage.setItem(\"authToken\", response.data.auth_token);\n          localStorage.setItem(\"userInfo\", JSON.stringify(response.data.user));\n          setCurrentUser(response.data.user);\n          callback();\n        }\n      })\n      .catch(err => {\n        if (err.response.status === 401) {\n          toast.error(\n            \"Invalid credentials, check and try again.\",\n            toastSettings\n          );\n        }\n      });\n  };\n\n  const logoutUser = () => {\n    toast.success(\"Successfully logged out, come back soon 🤓\", toastSettings);\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"userInfo\");\n    setCurrentUser(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <NavBar\n        signUpUser={signUpUser}\n        loginUser={loginUser}\n        logoutUser={logoutUser}\n        currentUser={currentUser}\n      />\n      <ToastContainer />\n\n      <Route exact path=\"/\">\n        <HomePage users={users} isLoading={isLoading} />\n      </Route>\n      <Route path=\"/user/:id/:username\">\n        <UserProfile users={users} />\n      </Route>\n      <Route path=\"/profile\">\n        <MyProfilePage />\n      </Route>\n      <Route path=\"/image/upload\">\n        <UploadPage />\n      </Route>\n    </div>\n  );\n}\n\nconst toastSettings = {\n  position: \"top-right\",\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}